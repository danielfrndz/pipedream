{
  "name": "browserbuild",
  "version": "0.6.0",
  "bin": {
    "browserbuild": "./bin/browserbuild"
  },
  "main": "./lib/browserbuild.js",
  "dependencies": {
    "commander": "0.5.x",
    "debug": "0.6.0"
  },
  "readme": "\n# Browserbuild\n\nBrowserbuild allows you to write code for the browser that leverages\n`require`, `module` and `exports`, but that gets exposed as a global.\n\nIt doesn't enforce any script loaders on the user to leverage the \ncompiled library.\n\n## Example\n\n1. Write for Node\n\n    **lib/hithere.js**\n\n    ```js\n    var b = require('./b')\n\n    module.exports = function () {\n      alert('hello ' + b());\n    }\n    ```\n\n    **lib/b.js**\n\n    ```\n    module.exports = function () {\n      return 'world';\n    }\n    ```\n\n2. Build for browser!\n\n    ```bash\n    $ browserbuild -m hithere `find lib -name '*.js'` > my-library.js\n    ```\n\n3. Use!\n\n    ```html\n    <script src=\"my-library.js\"></script>\n    <script>\n      hithere();\n    </script>\n    ```\n\n## Features\n\n- Write code like you would write for Node.JS. \n  - No wrappers\n  - No `undefined` type checking for `module` or `window`.\n- No new patterns\n  - No AMD, no `require.async`, no CommonJS transport proposals.\n  - Doesn't depend on `require` implementations on the client.\n  - It exposes your module as a single global, like `jQuery`, `io`, `_`. Just\n    like everyone is used to.\n- No code bloat.\n  - The conversion for the browser only adds a few lines of code.\n  - No trouble debugging.\n- [debug](http://github.com/visionmedia/debug) integration\n  - Make dev builds with debugging enabled.\n\n## Credits\n\n- `require` functions by [Jonah Fox](https://github.com/weepy), with\n  modifications by TJ Holowaychuk &lt;tj@learnboost.com&gt;\n- inspired by `browserify`\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 Guillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "browserbuild@0.6.0",
  "description": "Browserbuild allows you to write code for the browser that leverages `require`, `module` and `exports`, but that gets exposed as a global.",
  "dist": {
    "shasum": "5044d05dc308d2a184161cc06d83e3c5577a6432"
  },
  "_from": "browserbuild@~0.6.0",
  "_resolved": "https://registry.npmjs.org/browserbuild/-/browserbuild-0.6.0.tgz"
}
